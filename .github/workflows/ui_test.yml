name: Selenium UI Testing 🧑‍💻️

on:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          
      - name: Use Node.js
        env:
          NODE: 16
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE }}

      - name: Cache node_modules
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: |
            node_modules
            .veda/ui/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
  
      - name: Cache dist
        uses: actions/cache@v2
        id: cache-dist
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.workflow }}-${{ github.sha }}

      - name: Install
        run: |
          ./.veda/setup
      
      - name: Build
        env:
          MAPBOX_TOKEN: ${{ secrets.MAPBOX_TOKEN }}
          GOOGLE_TAG_MANAGER_ID: ${{ secrets.GOOGLE_TAG_MANAGER_ID }}
          GOOGLE_TAG_AUTH: ${{ secrets.GOOGLE_TAG_AUTH }}
          GOOGLE_TAG_PREVIEW: ${{ secrets.GOOGLE_TAG_PREVIEW }}
        run: yarn build
  
  serve_and-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Restore node_modules
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: |
            node_modules
            .veda/ui/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}

      - name: Restore dist cache
        uses: actions/cache@v2
        id: cache-dist
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.workflow }}-${{ github.sha }}
      
      - name: Install selenium
        run: pip install selenium
      
      - name: Serve and Test
        env:
          DASHBOARD_BASE_URL: http://localhost:9000
          OUTPUT_DIR: ${{ github.workspace }}/output
        run: |
          nohup yarn serve > serve.log 2>&1 &
          cd tests
          python selenium_ui_test.py
        
      - name: Kill yarn serve
        run: pkill -f "yarn serve"

      - name: Upload HTML artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: errors
          path: ${{ github.workspace }}/output
    